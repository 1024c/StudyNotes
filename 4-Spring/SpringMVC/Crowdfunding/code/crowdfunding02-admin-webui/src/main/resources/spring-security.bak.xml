<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <!-- <security:http>: spring 过滤器链配置：
        1）需要拦截什么资源
        2）什么资源什么角色权限
        3）定义认证方式：HttpBasic，FormLogin（*）
        4）定义登录页面，定义登录请求地址，定义错误处理方式
    -->
    <security:http>
        <!--
            pattern: 需要拦截资源
            access: 拦截方式
                isFullyAuthenticated(): 该资源需要认证才可以访问
                isAnonymous():只有匿名用户才可以访问（如果登录用户就无法访问）
                permitAll():允许所有人（匿名和登录用户）访问
        -->
        <security:intercept-url pattern="/product/index" access="permitAll()"/>
        <security:intercept-url pattern="/**" access="isFullyAuthenticated()"/>

        <!-- security:http-basic: 使用 HttpBasic 方式进行登录（认证） -->
        <!--<security:http-basic/>-->

        <!-- security:form-login: 使用 FormLogin 方式进行登录（认证） -->
        <security:form-login login-page="/userLogin"
                             authentication-failure-url="/userLogin?error=true"
                             authentication-success-forward-url="/product/index"/>
        <!-- 加上 rememberMe 功能 -->
        <!-- token-validity-seconds: 有效秒数 -->
        <security:remember-me token-repository-ref="jdbcTokenRepository" token-validity-seconds="3600"/>
    </security:http>

    <bean id="jdbcTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
        <property name="createTableOnStartup" value="true"/>
    </bean>

    <!--
        security:authentication-manager： 认证管理器
        1）认证信息提供方式（账户名，密码，当前用户权限）
    -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="myUserDetailServiceImpl">
            <!--<security:user-service>-->
            <!--    <security:user name="username" password="123456" authorities="ROLE_USER,ROLE_ADMIN"/>-->
            <!--    <security:user name="username" password="123456" authorities="ROLE_USER"/>-->
            <!--</security:user-service>-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 注入加密算法到spring容器 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>


    <!-- 将UserDetailService的实现类MyUserDetailService注入spring容器 -->
    <bean id="myUserDetailServiceImpl" class="com.tawe.crowd.mvc.config.MyUserDetailServiceImpl"/>

</beans>